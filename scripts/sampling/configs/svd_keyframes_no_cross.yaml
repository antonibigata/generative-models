model:
  base_learning_rate: 3.e-5
  target: sgm.models.diffusion.DiffusionEngine
  params:
    input_key: latents
    scale_factor: 0.18215
    disable_first_stage_autocast: True
    ckpt_path: logs/2024-08-23T10-55-09_example_training-svd_keyframes_vid/checkpoints/last.ckpt/checkpoint/mp_rank_00_model_states.pt
    bad_model_path: logs/2024-09-03T11-32-04_example_training-svd_keyframes_vid/checkpoints/last.ckpt/checkpoint/mp_rank_00_model_states.pt

    # LoRA
    use_lora: False
    lora_config:
      search_class_str: Linear
      target_replace_module: null
      r_linear: 16
      r_conv: 16
      loras: null  # path to lora .pt
      # verbose: False
      # dropout_p: 0.0
      # scale: 1.0
      # search_class: both

    denoiser_config:
      target: sgm.modules.diffusionmodules.denoiser.Denoiser
      params:
        scaling_config:
          target: sgm.modules.diffusionmodules.denoiser_scaling.VScalingWithEDMcNoise

    # network_wrapper: sgm.modules.diffusionmodules.wrappers.IdentityWrapper
    # network_wrapper: 
    #   target: sgm.modules.diffusionmodules.wrappers.InterpolationWrapper
    #   params:
    #     im_size: [512, 512] # USER: adapt this to your dataset
    #     n_channels: 4
    #     starting_mask_method: zeros
    #     add_mask: True

    network_config:
      target: sgm.modules.diffusionmodules.video_model.VideoUNet
      params:
        adm_in_channels: 512
        num_classes: sequential
        use_checkpoint: True
        in_channels: 8
        out_channels: 4
        model_channels: 320
        attention_resolutions: [4, 2, 1]
        num_res_blocks: 2
        channel_mult: [1, 2, 4, 4]
        num_head_channels: 64
        use_linear_in_transformer: True
        transformer_depth: 1
        context_dim: 1024
        spatial_transformer_attn_type: softmax-xformers
        extra_ff_mix_layer: True
        use_spatial_context: True
        merge_strategy: learned_with_images
        video_kernel_size: [3, 1, 1]
        fine_tuning_method: null
        audio_cond_method: to_time_emb
        additional_audio_frames: 0
        audio_dim: 1024
        unfreeze_blocks: [] # Because we changed the input block
        # adapter_kwargs:
        #   # down_ratio: 1
        #   # adapter_type: null
        #   # adapter_weight: null
        #   # act_layer: gelu
        #   # zero_init_last: True
        #   # use_bias: True
        #   # adapt_on_time: True
        #   # condition_on: space
        #   # condition_dim: 1280
        #   target_replace_module: ["SpatialVideoTransformer"]
        #   r: 16
        #   loras: null  # path to lora .pt
        #   verbose: False
        #   dropout_p: 0.0
        #   scale: 1.0

    conditioner_config:
      target: sgm.modules.GeneralConditioner
      params:
        emb_models:
        - is_trainable: False
          input_key: cond_frames_without_noise
          ucg_rate: 0.1
          target: sgm.modules.encoders.modules.FrozenOpenCLIPImagePredictionEmbedder
          params:
            n_cond_frames: 1
            n_copies: 1
            open_clip_embedding_config:
              target: sgm.modules.encoders.modules.FrozenOpenCLIPImageEmbedder
              params:
                freeze: True

        # - input_key: fps_id
        #   is_trainable: False
        #   target: sgm.modules.encoders.modules.ConcatTimestepEmbedderND
        #   params:
        #     outdim: 256

        # - input_key: motion_bucket_id
        #   is_trainable: False
        #   target: sgm.modules.encoders.modules.ConcatTimestepEmbedderND
        #   params:
        #     outdim: 256

        - input_key: cond_frames
          is_trainable: False
          ucg_rate: 0.1
          target: sgm.modules.encoders.modules.VideoPredictionEmbedderWithEncoder
          params:
            disable_encoder_autocast: True
            n_cond_frames: 1
            n_copies: 1
            is_ae: True
            load_encoder: False
            encoder_config:
              target: sgm.models.autoencoder.AutoencoderKLModeOnly
              params:
                embed_dim: 4
                monitor: val/rec_loss
                ddconfig:
                  attn_type: vanilla-xformers
                  double_z: True
                  z_channels: 4
                  resolution: 256
                  in_channels: 3
                  out_ch: 3
                  ch: 128
                  ch_mult: [1, 2, 4, 4]
                  num_res_blocks: 2
                  attn_resolutions: []
                  dropout: 0.0
                lossconfig:
                  target: torch.nn.Identity

        # - input_key: cond_aug
        #   is_trainable: False
        #   target: sgm.modules.encoders.modules.ConcatTimestepEmbedderND
        #   params:
        #     outdim: 256

        - input_key: valence
          is_trainable: False
          target: sgm.modules.encoders.modules.ConcatTimestepEmbedderND
          params:
            is_temporal: True
            outdim: 256

        - input_key: arousal
          is_trainable: False
          target: sgm.modules.encoders.modules.ConcatTimestepEmbedderND
          params:
            is_temporal: True
            outdim: 256

        # - input_key: emo_labels
        #   is_trainable: False
        #   target: sgm.modules.encoders.modules.EmotionLabelEmbedder
        #   params:
        #     num_emotions: 8
        #     embedding_dim: 256

        - input_key: audio_emb
          is_trainable: True
          ucg_rate: 0.2
          target: sgm.modules.encoders.modules.WhisperAudioEmbedder
          params:
            merge_method: mean 
            linear_dim: 1024
            # cond_type: crossattn
            audio_dim: 1536

    first_stage_config:
      target: sgm.models.autoencoder.AutoencodingEngine
      params:
        loss_config:
          target: torch.nn.Identity
        regularizer_config:
          target: sgm.modules.autoencoding.regularizers.DiagonalGaussianRegularizer
        encoder_config: 
          target: sgm.modules.diffusionmodules.model.Encoder
          params:
            attn_type: vanilla
            double_z: True
            z_channels: 4
            resolution: 256
            in_channels: 3
            out_ch: 3
            ch: 128
            ch_mult: [1, 2, 4, 4]
            num_res_blocks: 2
            attn_resolutions: []
            dropout: 0.0
        decoder_config:
          target: sgm.modules.autoencoding.temporal_ae.VideoDecoder
          params:
            attn_type: vanilla
            double_z: True
            z_channels: 4
            resolution: 256
            in_channels: 3
            out_ch: 3
            ch: 128
            ch_mult: [1, 2, 4, 4]
            num_res_blocks: 2
            attn_resolutions: []
            dropout: 0.0
            video_kernel_size: [3, 1, 1]

    sampler_config:
      target: sgm.modules.diffusionmodules.sampling.EulerEDMSampler
      params:
        num_steps: 10
        discretization_config:
          target: sgm.modules.diffusionmodules.discretizer.AYSDiscretization
          # params:
          #   sigma_max: 80.0

        guider_config:
          target: sgm.modules.diffusionmodules.guiders.VanillaCFG
          params:
            scale: 2.
            # low_sigma: 0.
            # high_sigma: 1.61

        # guider_config:
        #   target: sgm.modules.diffusionmodules.guiders.LinearPredictionGuider
        #   params:
        #     max_scale: 2.0
        #     num_frames: 14
        #     min_scale: 2.0
        #     only_first: False

   